name: Build All Solvers

on: [push, pull_request]

jobs:

  intel-release:
    name: Build Linux Release (SEND THIS!!!)
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install gperf libgmp-dev cmake bison flex gcc-multilib linux-libc-dev libboost-all-dev ninja-build python3-setuptools libtinfo-dev
      - name: Download Clang 11
        run: wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
      - name: Extract Clang 11
        run: tar xf clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz && mv clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04 clang
      - name: Setup boolector
        run: git clone https://github.com/boolector/boolector && cd boolector && git reset --hard 3.2.0 && ./contrib/setup-lingeling.sh && ./contrib/setup-btor2tools.sh && ./configure.sh --prefix $PWD/../boolector-release && cd build && make -j9 && make install
      - name: Setup Z3
        run: wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.9/z3-4.8.9-x64-ubuntu-16.04.zip && unzip z3-4.8.9-x64-ubuntu-16.04.zip && mv z3-4.8.9-x64-ubuntu-16.04/ z3
      - name: Get current folder and files
        run: pwd && ls
      - name: Configure CMake
        run: mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_REGRESSION=On -GNinja -DClang_DIR=$PWD/../clang -DLLVM_DIR=$PWD/../clang -DBUILD_STATIC=On -DBoolector_DIR=$PWD/../boolector-release -DZ3_DIR=$PWD/../z3
      - name: Build ESBMC
        run: cd build && cmake --build . && cpack && mv ESBMC-*.sh ESBMC-Linux.sh
      - uses: actions/upload-artifact@v1
        with:
          name: intel-release
          path: ./build/ESBMC-Linux.sh
      - name: Run Tests
        run: cd build/ && ctest -j4 --output-on-failure --progress .

  build-windows:
    name: Build ESBMC with Z3 (Windows)
    runs-on: windows-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: check python
      run: python --version
    - name: Make git use LF only
      run: |
        git config --system core.autocrlf false
        git config --system core.eol lf
    - uses: actions/checkout@v1
    - name: Instal gnu tools (od)
      run: choco install -y gnuwin32-coreutils.portable nsis.portable
    - name: Check if od is on path
      run: od.exe --version
    - name: Update vcpkg
      run: |
        vcpkg.exe update
        cd C:/vcpkg
        git.exe pull
        .\bootstrap-vcpkg.bat
    - name: vcpkg integrate
      run: vcpkg.exe integrate install
    - name: Install Boost
      run: vcpkg.exe install boost-filesystem:x64-Windows boost-date-time:x64-windows boost-test:x64-windows boost-multi-index:x64-windows boost-crc:x64-windows boost-property-tree:x64-windows boost-uuid:x64-windows boost-program-options:x64-windows
    - name: Install Bison/Flex
      run: choco install -y winflexbison
    - name: Prepare Environment
      run: .\scripts\configure_environment.ps1
    - name: Check environment
      run: |
        ls C:\vcpkg\installed\x64-windows\bin\
        ls C:\Deps
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake.exe .. -A x64 -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DENABLE_REGRESSION=On -DBUILD_TESTING=On -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_DIR=C:/deps/clang/clang -DClang_DIR=C:/deps/clang/clang -DZ3_DIR=C:/deps/z3-4.8.9-x64-win -DBOOST_DLL_FILE="C:/deps/boost_filesystem-vc142-mt-x64-1_77.dll;C:/deps/boost_program_options-vc142-mt-x64-1_77.dll"
    - name: Build ESBMC
      run: |
        cd build
        cmake --build . --target INSTALL  --config RelWithDebInfo
        cpack -G ZIP -C RelWithDebInfo
        mv ESBMC-*.zip ESBMC-Windows.zip
    - uses: actions/upload-artifact@v1
      with:
          name: release-windows
          path: ./build/ESBMC-Windows.zip
    - name: Run Tests
      run: |
        cd build
        ctest -j4 --output-on-failure --progress . -C RelWithDebInfo
