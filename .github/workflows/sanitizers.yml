name: Run clang sanitizers

on: [push, pull_request]
jobs:

  sanitizer:
    env:
      SANITIZER_MODE: [ASAN, TSAN, MSAN, LSAN, UBSAN]
    name: Test esbmc with Sanitizer
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - name: Install Dependencies
      run: sudo apt-get update && sudo apt-get install gperf libgmp-dev cmake bison flex gcc-multilib linux-libc-dev libboost-all-dev ninja-build python3-setuptools libtinfo-dev
    - name: Download Clang 11
      run: wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
    - name: Extract Clang 11
      run: tar xf clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz && mv clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04 clang
    - name: Get current folder and files
      run: pwd && ls
    - name: Setup boolector
      run: git clone --depth=1 --branch=3.2.1 https://github.com/boolector/boolector && cd boolector && ./contrib/setup-lingeling.sh && ./contrib/setup-btor2tools.sh && ./configure.sh --prefix $PWD/../boolector-release && cd build && make -j4 && make install
    - name: Configure CMake
      run: mkdir build && cd build && CC=../clang/bin/clang CXX=../clang/bin/clang++ cmake .. -GNinja -DREGRESSION_CORE_ONLY=ON -DCMAKE_BUILD_TYPE=Sanitizer -DSANITIZER_TYPE=$SANITIZER_MODE -DClang_DIR=$PWD/../clang -DLLVM_DIR=$PWD/../clang -DENABLE_SOLIDITY_FRONTEND=On -DBoolector_DIR=$PWD/../boolector-release
    - name: Build ESBMC
      run: cd build && ninja
    - name: Run tests
      run: cd build/ && ctest -j4 --output-on-failure --progress .

